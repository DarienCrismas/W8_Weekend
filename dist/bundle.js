(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let e;const i=new Uint8Array(16);function r(){if(!e&&(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(i)}const s=[];for(let t=0;t<256;++t)s.push((t+256).toString(16).slice(1));const n=function(e,i,n){if(t.randomUUID&&!i&&!e)return t.randomUUID();const a=(e=e||{}).random||(e.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,i){n=n||0;for(let t=0;t<16;++t)i[n+t]=a[t];return i}return function(t,e=0){return(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase()}(a)};class a{constructor(t,e){this._name=t,this._age=e,this._cart=[],this._id=n()}get cart(){return this._cart}set cart(t){this._cart=t}get id(){return this._id}set id(t){this._id=t}get name(){return this._name}set name(t){this._name=t}get age(){return this._age}set age(t){this._age=t}addToCart(t){this.cart.includes(t)?(t.quantity++,this.updateCart()):(this.cart=this.cart.concat(t),this.updateCart())}removeFromCart(t){this.cart.forEach(((e,i)=>{e===t&&this.cart.splice(i,1)}))}removeQuantityFromCart(t,e){e<=t.quantity?t.quantity-=e:console.log("That's more than you have!")}cartTotal(){let t=0;for(let e of this.cart)t+=e.price;return t}updateCart(){var t,e;if(this.cart.length>0){this.cart.forEach((t=>{this.cartHTMLElement(t)}));let e=`<div id = "total">Cart total: ${this.cartTotal()}</div>`;null===(t=document.querySelector(".cart"))||void 0===t||t.insertAdjacentHTML("beforeend",e)}else{const t='<div id = "nada">\n            <h2 id="nothing">Your cart is empty.</h2>\n            </div>';null===(e=document.querySelector(".cart"))||void 0===e||e.insertAdjacentHTML("beforeend",t)}}cartHTMLElement(t){var e;const i=`<div id = ${t.id} class="card"\n        <ul class="list-group">\n            <li class="grid-item">${t.name}</li>\n            <li class="grid-item">${t.quantity}</li>\n            <li class="grid-item">${t.price}</li>>\n        </ul>\n        </div>`;null===(e=document.querySelector(".cart"))||void 0===e||e.insertAdjacentHTML("beforeend",i)}}class o{constructor(t,e,i,r){this._name=t,this._price=e,this._description=i,this._quantity=r,this._id=n()}get id(){return this._id}get name(){return this._name}set name(t){this.name=t}get price(){return this._price}set price(t){this._price=t}get description(){return this._description}set description(t){this._description=t}get quantity(){return this._quantity}set quantity(t){this._quantity=t}}function c(t,e,i,r){return new o(t,e,i,r)}let d=c("pear",1.99,"descriptive text",1),l=c("bread",5.99,"descriptive text",1),u=c("corn",.5,"descriptive text",1),m=c("pasta",5.99,"descriptive text",1),h=c("pasta sauce",3.75,"descriptive text",1),p=c("cheese",.99,"descriptive text",1);const _=new class{constructor(t,e,i,r,s,n){this._item1=t,this._item2=e,this._item3=i,this._item4=r,this._item5=s,this._item6=n,this._allItems=[],this._allItems=[this._item1,this._item2,this._item3,this._item4,this._item5,this._item6]}set item1(t){this._item1=t}set item2(t){this._item1=t}set item3(t){this._item1=t}set item4(t){this._item1=t}set item5(t){this._item1=t}set item6(t){this._item1=t}get allItems(){return this._allItems}showItems(){this.allItems.forEach((t=>{this.itemElement(t)}))}itemElement(t){var e;const i=`<div id = ${t.id} class="card"\n            <ul class="list-group">\n                <li class="grid-item">${t.name}</li>\n                <li class="grid-item">${t.description}</li>\n                <li class="grid-item">${t.price}</li>\n                <button class="button" onclick="addtoCart(${t})">Add To Cart</button>\n            </ul>\n            </div>`;null===(e=document.querySelector(".shop"))||void 0===e||e.insertAdjacentHTML("beforeend",i)}}(d,l,u,m,h,p),g=document.getElementById("logform");null==g||g.addEventListener("submit",(t=>{var e;t.preventDefault();const i=document.querySelector("#userName"),r=document.querySelector("#userAge"),s=new a(null==i?void 0:i.value,null==r?void 0:r.value);null===(e=document.querySelector("#user"))||void 0===e||e.insertAdjacentHTML("beforeend",`<h2>Hello ${s.name}!</h2>`),s&&(_.showItems(),s.updateCart())}))})();